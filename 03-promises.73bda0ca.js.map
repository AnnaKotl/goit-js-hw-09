{"mappings":"C,A,W,S,E,C,E,O,G,E,U,C,E,O,C,C,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,SCEM,EAAO,SAAS,aAAA,CAAc,SAC9B,EAAa,SAAS,aAAA,CAAc,uBACpC,EAAY,SAAS,aAAA,CAAc,sBACnC,EAAc,SAAS,aAAA,CAAc,wBACrC,EAAmB,CAAE,MAAO,OAAQ,EAsD1C,EAAK,gBAAA,CAAiB,SApCtB,SAA0B,CAAC,EACzB,EAAE,cAAF,GAEA,IAAM,EAAa,SAAS,EAAW,KAAvC,EACM,EAAO,SAAS,EAAU,KAAhC,EACM,EAAS,SAAS,EAAY,KAApC,EAEA,GAAI,GAAU,GAAK,MAAM,GAAS,CAChC,AAAA,EAAA,GAAS,MAAA,CAAO,OAAA,CAvBW,0DAwB3B,MACF,CACA,GAAI,EAAa,GAAK,MAAM,GAAa,CACvC,AAAA,EAAA,GAAS,MAAA,CAAO,OAAA,CA1BU,yCA2B1B,MACF,CACA,GAAI,EAAO,GAAK,MAAM,GAAO,CAC3B,AAAA,EAAA,GAAS,MAAA,CAAO,OAAA,CA7BS,wCA8BzB,MACF,CAEA,AAAA,EAAA,GAAS,MAAA,CAAO,IAAA,CAAK,GAErB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,IAI1B,AArCJ,CAAA,SAAuB,CAAQ,CAAE,CAAK,EACpC,OAAO,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACE,IAAM,EAAgB,KAAK,MAAA,GAAW,GACtC,WAAW,WAET,IAAM,EAAgB,GAAa,MAAA,CADnB,EAVU,sBACA,qBAUM,KAAkB,MAAA,CAAf,EAAS,QAAY,MAAA,CAAN,EAAM,KACxD,CAAA,EAAgB,EAAQ,GAAgB,EAAO,EACjD,EAAG,EACL,EACF,CAAA,EAyBqB,EAAI,EACP,EAAa,EAAO,GAG/B,IAAA,CAAK,SAAC,CADT,EAEI,AAAA,EAAA,GAAS,MAAA,CAAO,OAAA,CAAQ,EAC1B,GACC,KAAA,CAAM,SAAC,CADR,EAEE,AAAA,EAAA,GAAS,MAAA,CAAO,OAAA,CAAQ,EAC1B,EAEN,E","sources":["<anon>","src/js/03-promises.js"],"sourcesContent":["(function () {\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\n\nvar $6JpON = parcelRequire(\"6JpON\");\nvar $ce04d3a99e08e73b$var$form = document.querySelector(\".form\");\nvar $ce04d3a99e08e73b$var$delayInput = document.querySelector('input[name=\"delay\"]');\nvar $ce04d3a99e08e73b$var$stepInput = document.querySelector('input[name=\"step\"]');\nvar $ce04d3a99e08e73b$var$amountInput = document.querySelector('input[name=\"amount\"]');\nvar $ce04d3a99e08e73b$var$NOTIFLIX_OPTIONS = {\n    width: \"300px\"\n};\nvar $ce04d3a99e08e73b$var$PROMISE_SUCCESS_MESSAGE = \"✅ Fulfilled promise\";\nvar $ce04d3a99e08e73b$var$PROMISE_FAILURE_MESSAGE = \"❌ Rejected promise\";\nvar $ce04d3a99e08e73b$var$INVALID_AMOUNT_MESSAGE = \"Amount must be a non-negative integer and more than 0.\";\nvar $ce04d3a99e08e73b$var$INVALID_DELAY_MESSAGE = \"Delay must be a non-negative integer.\";\nvar $ce04d3a99e08e73b$var$INVALID_STEP_MESSAGE = \"Step must be a non-negative integer.\";\nfunction $ce04d3a99e08e73b$var$createPromise(position, delay) {\n    return new Promise(function(resolve, reject) {\n        var shouldResolve = Math.random() > 0.3;\n        setTimeout(function() {\n            var message = shouldResolve ? $ce04d3a99e08e73b$var$PROMISE_SUCCESS_MESSAGE : $ce04d3a99e08e73b$var$PROMISE_FAILURE_MESSAGE;\n            var notification = \"\".concat(message, \" \").concat(position, \" in \").concat(delay, \"ms\");\n            shouldResolve ? resolve(notification) : reject(notification);\n        }, delay);\n    });\n}\nfunction $ce04d3a99e08e73b$var$handleFormSubmit(e) {\n    e.preventDefault();\n    var firstDelay = parseInt($ce04d3a99e08e73b$var$delayInput.value);\n    var step = parseInt($ce04d3a99e08e73b$var$stepInput.value);\n    var amount = parseInt($ce04d3a99e08e73b$var$amountInput.value);\n    if (amount <= 0 || isNaN(amount)) {\n        (0, (/*@__PURE__*/$parcel$interopDefault($6JpON))).Notify.failure($ce04d3a99e08e73b$var$INVALID_AMOUNT_MESSAGE);\n        return;\n    }\n    if (firstDelay < 0 || isNaN(firstDelay)) {\n        (0, (/*@__PURE__*/$parcel$interopDefault($6JpON))).Notify.failure($ce04d3a99e08e73b$var$INVALID_DELAY_MESSAGE);\n        return;\n    }\n    if (step < 0 || isNaN(step)) {\n        (0, (/*@__PURE__*/$parcel$interopDefault($6JpON))).Notify.failure($ce04d3a99e08e73b$var$INVALID_STEP_MESSAGE);\n        return;\n    }\n    (0, (/*@__PURE__*/$parcel$interopDefault($6JpON))).Notify.init($ce04d3a99e08e73b$var$NOTIFLIX_OPTIONS);\n    for(var i = 0; i < amount; i++){\n        var position = i + 1;\n        var delay = firstDelay + step * i;\n        $ce04d3a99e08e73b$var$createPromise(position, delay).then(function(notification) {\n            (0, (/*@__PURE__*/$parcel$interopDefault($6JpON))).Notify.success(notification);\n        }).catch(function(notification) {\n            (0, (/*@__PURE__*/$parcel$interopDefault($6JpON))).Notify.failure(notification);\n        });\n    }\n}\n$ce04d3a99e08e73b$var$form.addEventListener(\"submit\", $ce04d3a99e08e73b$var$handleFormSubmit);\n\n})();\n//# sourceMappingURL=03-promises.73bda0ca.js.map\n","import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst NOTIFLIX_OPTIONS = { width: '300px' };\nconst PROMISE_SUCCESS_MESSAGE = '✅ Fulfilled promise';\nconst PROMISE_FAILURE_MESSAGE = '❌ Rejected promise';\nconst INVALID_AMOUNT_MESSAGE = 'Amount must be a non-negative integer and more than 0.';\nconst INVALID_DELAY_MESSAGE = 'Delay must be a non-negative integer.';\nconst INVALID_STEP_MESSAGE = 'Step must be a non-negative integer.';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      const message = shouldResolve ? PROMISE_SUCCESS_MESSAGE : PROMISE_FAILURE_MESSAGE;\n      const notification = `${message} ${position} in ${delay}ms`;\n      shouldResolve ? resolve(notification) : reject(notification);\n    }, delay);\n  });\n};\n\nfunction handleFormSubmit(e) {\n  e.preventDefault();\n\n  const firstDelay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  if (amount <= 0 || isNaN(amount)) {\n    Notiflix.Notify.failure(INVALID_AMOUNT_MESSAGE);\n    return;\n  }\n  if (firstDelay < 0 || isNaN(firstDelay)) {\n    Notiflix.Notify.failure(INVALID_DELAY_MESSAGE);\n    return;\n  }\n  if (step < 0 || isNaN(step)) {\n    Notiflix.Notify.failure(INVALID_STEP_MESSAGE);\n    return;\n  }\n\n  Notiflix.Notify.init(NOTIFLIX_OPTIONS);\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const delay = firstDelay + step * i;\n\n    createPromise(position, delay)\n      .then((notification) => {\n        Notiflix.Notify.success(notification);\n      })\n      .catch((notification) => {\n        Notiflix.Notify.failure(notification);\n      });\n  }\n};\n\nform.addEventListener('submit', handleFormSubmit);"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$6JpON","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$NOTIFLIX_OPTIONS","width","addEventListener","e","preventDefault","firstDelay","parseInt","value","step","amount","isNaN","Notify","failure","i","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","notification","concat","then","success","catch"],"version":3,"file":"03-promises.73bda0ca.js.map"}